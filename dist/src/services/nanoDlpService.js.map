{"version":3,"sources":["../../../src/services/nanoDlpService.js"],"names":["require","debug","NanoDLPService","auth","serverURL","global","SERVER_URL","enable","user","pass","session","_getSession","_request","plate","settings","method","url","split","uri","headers","Cookie","form","layer","encoding","orientation","fs","existsSync","Promise","resolve","readFileSync","stl","STL2PNG","getPNG","log","JSON","parse","slice","toString","join","gcode","console","_requestP","type","json","simple","transform","body","response","resolveWithFullResponse","timeout","time","data","request","post","error","statusCode"],"mappings":"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","file":"nanoDlpService.js","sourcesContent":["'use strict';\r\nrequire(\"babel-polyfill\");\r\n\r\nimport request from \"request-promise-native\";\r\nimport STL2PNG from \"./utils/stl2png.js\";\r\nimport fs from \"fs\";\r\n\r\nimport debug_ from 'debug';\r\nconst debug = debug_('nanodlp');\r\n\r\nexport default class NanoDLPService {\r\n  constructor(auth) {\r\n    this.serverURL = global.SERVER_URL;\r\n    if (auth.enable) {\r\n      this.auth = true;\r\n      this.user = auth.user;\r\n      this.pass = auth.pass;\r\n      this.session = \"\";\r\n      this._getSession();\r\n    }\r\n    else {\r\n      this.auth=false;\r\n    }\r\n  }\r\n\r\n\r\n  async getPlates(){\r\n    return this._request(\"/json/db/plates.json\");\r\n  }\r\n\r\n  async getPlatesIndex(){\r\n    return this._request(\"/json/index\");\r\n  }\r\n\r\n  async getLog(){\r\n    return this._request(\"/log\");\r\n  }\r\n\r\n  async getSlice(){\r\n    return this._request(\"/slicer\");\r\n  }\r\n  \r\n  async getSetup(){\r\n    return this._request(\"/json/db/machine.json\");\r\n  }\r\n  \r\n  async getProfiles(){\r\n    return this._request(\"/json/db/profiles.json\");\r\n  }\r\n  \r\n  async setCureTime(plate, settings){\r\n    debug(method+\": \"+url+`${this.auth ? \"\\tAUTH: \"+this.session.split(\"=\")[1] : \"\"}`);\r\n    return await request({\r\n      uri: `${this.serverURL}/profile/edit/${plate}`,\r\n      headers:  { Cookie: `${this.auth ?  this.session : \"\"}`},\r\n      form: settings,\r\n      method: \"POST\",\r\n    });\r\n  }\r\n\r\n  async getCurrentPlateLayer(plate, layer){\r\n    return await request({ url: `${this.serverURL}/static/plates/${plate}/${layer}.png`, encoding: null });\r\n  }\r\n  \r\n  async getCurrentPlate3DView(plate, orientation){\r\n    if (fs.existsSync(`temp/${plate}_${orientation}.png`)) {\r\n      return Promise.resolve(fs.readFileSync(`temp/${plate}_${orientation}.png`));\r\n    }\r\n    \r\n    let stl =  await request({ url: `${this.serverURL}/static/plates/${plate}/plate.stl`, encoding: null });\r\n    return await new STL2PNG().getPNG(stl, plate, orientation);\r\n  }\r\n  \r\n  async getCurrentPlateSTL(plate){\r\n  }\r\n  \r\n  async getStatus(){\r\n    return await this._request(\"/status\");\r\n  }\r\n\r\n  async pause(){\r\n    return await this._request(\"/printer/pause\");\r\n  }\r\n\r\n  async stop(){\r\n    return await this._request(\"/printer/stop\");\r\n  }\r\n\r\n  async unpause(){\r\n    return await this._request(\"/printer/unpause\");\r\n  }\r\n\r\n  async getCurrentLog(){\r\n    var log = await this._request(\"/log\");\r\n    return JSON.parse((log.split(\"\\n\").slice(-1)).toString().split(\" \").slice(2).join(\" \"));\r\n  }\r\n  \r\n  async command(url) {\r\n    return await this._request(url, \"GET\", \"\");\r\n  }\r\n\r\n  async sendGcode(gcode) {\r\n    console.log(\"In sendGcode\");\r\n    return await this._requestP(\"/term-io\", gcode);\r\n  }\r\n\r\n  async getIndex(){\r\n    return await this._request(\"/json/index\",\"GET\",\"json\",5000);\r\n  }\r\n  \r\n  async _getSession(type=\"json\"){\r\n    debug(\"POST\"+\": \"+\"/login\");\r\n    let response = await request({\r\n      uri: `${this.serverURL}`+\"/login\",\r\n      form: {\r\n        \"username\": `${this.user}`,\r\n        \"password\": `${this.pass}`,\r\n      },\r\n      json: type === \"json\",\r\n      method: \"POST\",\r\n      simple: false,\r\n      transform: function(body, response, resolveWithFullResponse) {\r\n                  return {'headers': response.headers, 'data': body};\r\n                }\r\n    });\r\n\r\n    if (response.headers['location'] === '/') {\r\n      debug(\"Auth: Login response: \"+ response.headers['set-cookie'][0]);\r\n      this.session = response.headers['set-cookie'][0];\r\n      debug(\"Auth: Setting cookie: \"+this.session);\r\n    } else {\r\n      debug(\"Login failed\");\r\n      this.session =  \"Error\";\r\n    }\r\n  }\r\n\r\n  async _request(url, method=\"GET\", type=\"json\"){\r\n    debug(method+\": \"+url+`${this.auth ? \"\\tAUTH: \"+this.session.split(\"=\")[1] : \"\"}`);\r\n    return await request({\r\n      uri: `${this.serverURL}${url}`,\r\n      method: method,\r\n      headers:  { Cookie: `${this.auth ?  this.session : \"\"}`},\r\n      json: type === \"json\",\r\n      timeout: 10000\r\n    });\r\n  }\r\n\r\n  async _request(url, method=\"GET\", type=\"json\", time){\r\n    debug(method+\": \"+url+`${this.auth ? \"\\tAUTH: \"+this.session.split(\"=\")[1] : \"\"}`);\r\n    return await request({\r\n      uri: `${this.serverURL}${url}`,\r\n      method: method,\r\n      headers:  { Cookie: `${this.auth ?  this.session : \"\"}`},\r\n      json: type === \"json\",\r\n      timeout: time\r\n    });\r\n  }\r\n\r\n  async _requestP(url, data) {\r\n    console.log(\"in requestP\");\r\n    request.post({\r\n        url: `${this.serverURL}${url}`,\r\n        form: {\"gcode\": data}\r\n    }, function(error, response, body) {\r\n          if (!error && response.statusCode === 200) {\r\n          } else {\r\n            console.log(error);\r\n          }\r\n    });\r\n  }\r\n}\r\n"]}