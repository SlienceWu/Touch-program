{"version":3,"sources":["../../../../../src/plugins/nextion/pages/bar.js"],"names":["require","fs","_","Bar","screenManager","options","setScreen","_this","confirmResult","confirmType","profileId","data0","devicePath","data1","targetFile","data2","fullPath","existsSync","statSync","isFile","changePage","buffer","readFileSync","uri","global","SERVER_URL","formData","value","filename","method","last","toLowerCase","slice","indexOf","num","prog","setInterval","setText","clearInterval","lastLog","progress","nanoDLP","getLog","log","logArr","split","msg","length","abstract"],"mappings":"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","file":"bar.js","sourcesContent":["import request from \"request-promise-native\";\r\n\r\nrequire(\"babel-polyfill\");\r\n\r\nimport abstract from \"./abstract.js\";\r\nconst fs = require(\"fs\");\r\n\r\nlet _ = null;\r\n\r\nexport default class Bar extends abstract {\r\n    constructor(screenManager) {\r\n        super(screenManager);\r\n    }\r\n\r\n    async init(options) {\r\n        await this.setScreen(\"bar\");\r\n        let _this = this;\r\n        if (options) {\r\n            if (options.confirmResult && options.confirmType === \"addplate\") {\r\n                let profileId = options.data0;\r\n                let devicePath = options.data1;\r\n                let targetFile = options.data2;\r\n\r\n                let fullPath = devicePath + '/' + targetFile;\r\n                if (!(fs.existsSync(fullPath) && fs.statSync(fullPath).isFile())) {\r\n                    return this.changePage(\"plates\");\r\n                }\r\n                let buffer = fs.readFileSync(fullPath);\r\n\r\n                _ = request({\r\n                    uri: global.SERVER_URL + \"/plate/add\",\r\n                    formData: {\r\n                        'ZipFile': {\r\n                            value: buffer,\r\n                            options: {\r\n                                filename: targetFile\r\n                            }\r\n                        },\r\n                        'Path': targetFile,\r\n                        'ProfileID': profileId\r\n                    },\r\n                    method: 'POST'\r\n                });\r\n                let last = targetFile.toLowerCase().slice(-3);\r\n                if (last.indexOf(\"zip\") !== -1){\r\n                    let num = 0;\r\n                    this.prog = setInterval( () => {\r\n                        num = num + 20;\r\n                        _this.setText(\"t1\",num);\r\n                        if (num >= 100){\r\n                            clearInterval(_this.prog);\r\n                            return _this.changePage(\"plates\");\r\n                        }\r\n                    },2000);\r\n                    return;\r\n                }\r\n                this.num = 0;\r\n                this.lastLog = \"\";\r\n                this.prog = setInterval(() => {\r\n                    _this.progress();\r\n                },2000);\r\n            }\r\n        }\r\n    }\r\n\r\n    async progress(){\r\n        this.log = await this.nanoDLP.getLog();\r\n        let logArr = this.log.split(\"\\n\");\r\n        let msg = logArr[logArr.length-1];\r\n        //console.log(msg);\r\n        if (msg.indexOf(\"Plate file being processed\") !== -1){\r\n            if (this.lastLog !== msg){\r\n                this.lastLog = msg;\r\n                this.num = this.num + 10;\r\n                return this.setText(\"t1\",this.num);\r\n            }\r\n        }else if (msg.indexOf(\"Plate copied\") !== -1){\r\n            if (this.lastLog !== msg){\r\n                this.lastLog = msg;\r\n                this.num = this.num + 10;\r\n                return this.setText(\"t1\",this.num);\r\n            }\r\n        }else if (msg.indexOf(\"Plate has been added\") !== -1){\r\n            if (this.lastLog !== msg){\r\n                this.lastLog = msg;\r\n                this.num = this.num + 10;\r\n                return this.setText(\"t1\",this.num);\r\n            }\r\n        }else if (msg.indexOf(\"Plate file has been uploaded\") !== -1){\r\n            if (this.lastLog !== msg){\r\n                this.lastLog = msg;\r\n                this.num = this.num + 10;\r\n                return this.setText(\"t1\",this.num);\r\n            }\r\n        }else if (msg.indexOf(\"Generating plate 3D preview\") !== -1){\r\n            if (this.lastLog !== msg){\r\n                this.lastLog = msg;\r\n                this.num = this.num + 40;\r\n                return this.setText(\"t1\",this.num);\r\n            }\r\n        }else if (msg.indexOf(\"Timeout on 3D preview generator\") !== -1){\r\n            this.setText(\"t1\",100);\r\n            clearInterval(this.prog);\r\n            return this.changePage(\"warning\");\r\n        }else if (msg.indexOf(\"3D preview has been generated\") !== -1){\r\n            this.setText(\"t1\",100);\r\n            clearInterval(this.prog);\r\n            return this.changePage(\"plates\");\r\n        }\r\n    }\r\n}"]}