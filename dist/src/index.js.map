{"version":3,"sources":["../../src/index.js"],"names":["require","global","SERVER_URL","config","url","nanoDLPService","NanoDLPService","auth","ScreenManager","nanoDLP","plugins","registerPlugin","i","length","init","update","catch","console","error","e","clearTimeout","updateTimeOut","getStatus","status","getCurrentLog","log","Promise","resolve","setTimeout","pluginName","plugin","default","push","Date","toGMTString"],"mappings":"AAAA;;;;AAIA;;;;AACA;;;;;;;;;;AAHAA,QAAQ,gBAAR;;AAKAC,OAAOC,UAAP,GAAoBC,iBAAOC,GAA3B;AACA,IAAMC,iBAAiB,IAAIC,wBAAJ,CAAmBH,iBAAOI,IAA1B,CAAvB;;IAEMC,a;AACF,6BAAc;AAAA;;AACV,aAAKC,OAAL,GAAeJ,cAAf;AACA,aAAKK,OAAL,GAAe,EAAf;AACA;AACA,aAAKC,cAAL,CAAoB,SAApB;AACH;;;;;;;;;;;AAGYC,iC,GAAI,C;;;sCAAGA,IAAI,KAAKF,OAAL,CAAaG,M;;;;;;uCACvB,KAAKH,OAAL,CAAaE,CAAb,EAAgBE,IAAhB,E;;;AAD+BF,mC;;;;;AAGzC,qCAAKG,MAAL,GAAcC,KAAd,CAAoB;AAAA,2CAAKC,QAAQC,KAAR,CAAcC,CAAd,CAAL;AAAA,iCAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIAC,6CAAa,KAAKC,aAAlB;;;uCAEmB,KAAKZ,OAAL,CAAaa,SAAb,GAAyBN,KAAzB,CAA+B,UAACG,CAAD,EAAO,CAAE,CAAxC,C;;;AAAfI,sC;;uCACY,KAAKd,OAAL,CAAae,aAAb,GAA6BR,KAA7B,CAAmC,UAACG,CAAD,EAAO,CAAE,CAA5C,C;;;AAAZM,mC;;sCACA,CAACF,MAAD,IAAW,CAACE,G;;;;;;uCACN,IAAIC,OAAJ,CAAY,UAACC,OAAD;AAAA,2CAAaC,WAAWD,OAAX,EAAoB,IAApB,CAAb;AAAA,iCAAZ,C;;;;uCACO,KAAKZ,MAAL,E;;;;;;;AAGjB,qCAASH,CAAT,GAAa,CAAb,EAAgBA,IAAI,KAAKF,OAAL,CAAaG,MAAjC,EAAyCD,GAAzC,EAA8C;AAC1C,yCAAKF,OAAL,CAAaE,CAAb,EAAgBG,MAAhB,CAAuBQ,MAAvB,EAA+BE,GAA/B,EAAoCT,KAApC,CAA0C,UAACG,CAAD,EAAO;AAAEF,gDAAQC,KAAR,CAAcC,CAAd;AAAmB,qCAAtE;AACH;;AAEDC,6CAAa,KAAKC,aAAlB;AACA,qCAAKA,aAAL,GAAqBO,WAAW;AAAA,2CAAM,MAAKb,MAAL,EAAN;AAAA,iCAAX,EAAgC,IAAhC,CAArB;;;;;;;;;;;;;;;;;;uCAGWc,U,EAAY;AACvB,gBAAIC,SAAS,KAAK9B,QAAQ,eAAe6B,UAAvB,EAAmCE,OAAxC,EAAiD,IAAjD,CAAb;AACA,iBAAKrB,OAAL,CAAasB,IAAb,CAAkBF,MAAlB;AACAb,oBAAQQ,GAAR,CAAa,IAAIQ,IAAJ,EAAD,CAAaC,WAAb,KAA6B,WAA7B,GAA2CL,UAA3C,GAAwD,cAApE;AACH;;;;;;AAGL,IAAIrB,aAAJ,GAAoBM,IAApB,GAA2BE,KAA3B,CAAiC,UAACG,CAAD,EAAO;AAAEF,YAAQC,KAAR,CAAcC,CAAd;AAAmB,CAA7D","file":"index.js","sourcesContent":["'use strict';\r\n\r\nrequire(\"babel-polyfill\");\r\n\r\nimport NanoDLPService from \"./services/nanoDlpService.js\";\r\nimport config from \"../config.json\";\r\n\r\nglobal.SERVER_URL = config.url;\r\nconst nanoDLPService = new NanoDLPService(config.auth);\r\n\r\nclass ScreenManager {\r\n    constructor() {\r\n        this.nanoDLP = nanoDLPService;\r\n        this.plugins = [];\r\n        //this.registerPlugin(\"pushBullet\");\r\n        this.registerPlugin(\"nextion\");\r\n    }\r\n\r\n    async init() {\r\n        for (let i = 0; i < this.plugins.length; i++) {\r\n            await this.plugins[i].init();\r\n        }\r\n        this.update().catch(e => console.error(e));\r\n    }\r\n\r\n    async update() {\r\n        clearTimeout(this.updateTimeOut);\r\n\r\n        let status = await this.nanoDLP.getStatus().catch((e) => {});\r\n        let log = await this.nanoDLP.getCurrentLog().catch((e) => {});\r\n        if (!status || !log) {\r\n            await new Promise((resolve) => setTimeout(resolve, 2000));\r\n            return await this.update();\r\n        }\r\n\r\n        for (let i = 0; i < this.plugins.length; i++) {\r\n            this.plugins[i].update(status, log).catch((e) => { console.error(e); });\r\n        }\r\n\r\n        clearTimeout(this.updateTimeOut);\r\n        this.updateTimeOut = setTimeout(() => this.update(), 1000);\r\n    }\r\n\r\n    registerPlugin(pluginName) {\r\n        let plugin = new (require('./plugins/' + pluginName).default)(this);\r\n        this.plugins.push(plugin);\r\n        console.log((new Date()).toGMTString() + \" Plugin (\" + pluginName + \") registered\");\r\n    }\r\n}\r\n\r\nnew ScreenManager().init().catch((e) => { console.error(e); });\r\n"]}